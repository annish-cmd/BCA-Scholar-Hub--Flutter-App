import '../models/notice.dart';
import '../services/notice_service.dart';
import 'package:logger/logger.dart';

class WelcomeNoticeCreator {
  static final Logger _logger = Logger();

  /// Create a welcome notice for testing
  static Future<bool> createWelcomeNotice() async {
    try {
      _logger.d('Creating welcome notice...');

      final welcomeNotice = Notice(
        id: '', // Will be generated by Firebase
        title: 'Welcome to BCA Scholar Hub! ðŸŽ‰',
        content: '''Welcome to the BCA Scholar Hub - your comprehensive learning platform for BCA students!

ðŸ“š **What's New:**
â€¢ Access to semester-wise study materials
â€¢ Interactive global chat community
â€¢ AI-powered learning assistance
â€¢ Notice board for important updates
â€¢ Favorite your important notes

ðŸš€ **Getting Started:**
1. Browse through different semesters to find your study materials
2. Use the search feature to quickly find specific topics
3. Join the global chat to connect with fellow students
4. Mark important notes as favorites for easy access

ðŸ’¡ **Tips:**
â€¢ Check the notices regularly for important updates
â€¢ Use the AI chat for quick questions and clarifications
â€¢ Share your knowledge in the global chat community

We're excited to have you here! If you have any questions or suggestions, feel free to reach out through the global chat or contact us.

Happy Learning! ðŸ“–âœ¨''',
        authorId: 'system',
        authorName: 'BCA Scholar Hub Team',
        createdAt: DateTime.now(),
        isImportant: true,
        tags: ['welcome', 'getting-started', 'important'],
      );

      final noticeId = await NoticeService.addNotice(welcomeNotice);
      
      if (noticeId != null) {
        _logger.i('Welcome notice created successfully with ID: $noticeId');
        return true;
      } else {
        _logger.e('Failed to create welcome notice');
        return false;
      }
    } catch (e) {
      _logger.e('Error creating welcome notice:', error: e);
      return false;
    }
  }

  /// Check if welcome notice already exists
  static Future<bool> welcomeNoticeExists() async {
    try {
      final notices = await NoticeService.getAllNotices();
      return notices.any((notice) => 
          notice.title.contains('Welcome to BCA Scholar Hub') ||
          notice.authorId == 'system');
    } catch (e) {
      _logger.e('Error checking welcome notice:', error: e);
      return false;
    }
  }
}

